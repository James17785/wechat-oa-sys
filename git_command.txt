1. 创建一个空目录

$ mkdir learngit
$ cd learngit
$ pwd
/Users/michael/learngit

pwd命令用于显示当前目录

2.通过git init命令把这个目录变成Git可以管理的仓库：

$ git init
Initialized empty Git repository in /Users/michael/learngit/.git/

如果你没有看到当前文件.git目录，那是因为这个目录默认是隐藏的，用ls -ah命令就可以看见。
所有的版本控制系统，其实只能跟踪文本文件的改动
千万不要使用Windows自带的记事本编辑任何文本文件。

3.用命令git add告诉Git，把文件添加到仓库：
$ git add readme.txt

4. 用命令git commit告诉Git，把文件提交到仓库：
$ git commit -m "wrote a readme file"

[master (root-commit) eaadf4e] wrote a readme file
 1 file changed, 2 insertions(+)
 create mode 100644 readme.txt

 git commit命令，-m后面输入的是本次提交的说明
 为什么Git添加文件需要add，commit一共两步呢？因为commit可以一次提交很多文件，所以你可以多次add不同的文件，比如：
 $ git add file1.txt
$ git add file2.txt file3.txt
$ git commit -m "add 3 files."

5.要随时掌握工作区的状态，使用git status命令。
如果git status告诉你有文件被修改过，用git diff可以查看修改内容。

6. 版本回退

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本, 加上--pretty=oneline参数可以单行显示。

要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

看看readme.txt的内容, $ cat readme.txt

7. 工作区和暂存区
工作区就是你在电脑里能看到的目录

版本库（Repository）
工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。
Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。









